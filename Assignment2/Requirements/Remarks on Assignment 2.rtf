{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl560\sa321\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Remarks on Assignment 2 \
\pard\pardeftab720\sl440\sa298\partightenfactor0

\fs36 \cf2 Warning \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\fs24 \cf2 The second assignment is hard.
\b0  You are required to write the code for the Client.py and ServerWorker.py files. If you have not started working on your code yet, start work immediately! \
In the second assignment, you are required to, among other things, do the following tasks: \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write Python code to initialise the GUI containing the appropriate buttons. \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use object-oriented paradigms in order to successfully write the Client and ServerWorker classes. \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make use of Python threads where appropriate in your code. \
\pard\pardeftab720\sl440\sa298\partightenfactor0

\b\fs36 \cf2 Components to be implemented for the second assignment \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\i\b0\fs24 \cf2 Disclaimer: This is not an official list. Check with the lecturer if you are unsure of what you need to do.
\i0  \
The assignment can be thought of as consisting of two parts: the main part where the basic functionality is implemented and the additional part where extra functionality such as printing statistics is implemented. \
For the 
\b main part
\b0 , you need to write the following code files (templates will be provided later): \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Client.py - A simple GUI interface needs to be implemented here too. \
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ServerWorker.py \
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf2 Also, you will need to create your own movie.Mjpeg file. It is suggested that you consult the VideoStream.py file on eLearning first (but take note of the further remarks below first).\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b \cf2 You do not need to edit the RtpPacket.py file.
\b0  \
Once you have working Client.py, ServerWorker.py and movie.Mjpeg files, you will be able to play an Mjpeg file as described in the assignment. \
At this point, the requirements of "Task 1", "Task 2" and "Task 3" as described in the assignment description have been fulfilled. \
The 
\b additional part
\b0  is strictly for extra credit only. For this part, three are three steps in "Task 4" as shown in the assignment description. Some questions will involve additional coding. However, other questions will require 
\b written answers
\b0  rather than code. Please check with your lecturer in order to clarify how work for the additional part should be presented and which files need to be submitted. \
\pard\pardeftab720\sl440\sa298\partightenfactor0

\b\fs36 \cf2 Further remarks \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls3\ilvl0
\b0\fs24 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unless you have been advised otherwise, please use Python 2.7.x (not Python 3). \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fortunately, you do not need to edit the RtpPacket.py file or any other files that have already been supplied by the COMP5416 lecturer. \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In the VideoStream.py file, "first 5 bits" should read "first 5 
\b bytes
\b0 ". \
\pard\pardeftab720\sl440\sa298\partightenfactor0

\b\fs36 \cf2 Assignment Submission \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\fs24 \cf2 Email
\b0  your work to the email address given in the assignment 2 description. \
\pard\pardeftab720\sl440\sa298\partightenfactor0

\b\fs36 \cf2 Further hints \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls4\ilvl0
\b0\fs24 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 RTP operates over a UDP connection. RTP is used to stream video packets from the server to the client only. For your assignment, the server contacts the client. \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 RTSP operates over a TCP connection
\fs20 \super 1
\fs24 \nosupersub . RTSP is used to allow the client to send commands to the server and to allow the server to reply to the client's commands. 
\i RTSP is not used to stream the video packets.
\i0  For your assignment, the client connects to the server. \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Separate threads (in addition to the one used for managing the GUI) are needed in the client code for receiving RTP and RTSP packets. The use of multiple threads will allow the GUI to continue functioning whilst the client is receiving RTP and/or RTSP packets. \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For the server, two threads need to run in parallel: one for handling RTSP packets and one for handling RTP packets. \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 All the required code for creating the threads mentioned above is included in the {\field{\*\fldinst{HYPERLINK "http://rp-www.cs.usyd.edu.au/%7Ejphu3705/examples3/examples3.html"}}{\fldrslt \cf3 \ul \ulc3 \strokec3 third set of code examples.}} \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Do not confuse RTSP with RT
\b C
\b0 P. RTCP is not used in this assignment. \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Source codes that aim to meet at least some of the core specifications of the assignment are located in various places on the Internet. Be aware that you must not repeat such code, or part thereof, verbatim or near-verbatim in your code! However, it is not against the University rules to consult such code. \
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 There is a "presentation" in week 12. Actually, it is a combination of a demonstration and short oral quiz where you will be asked various questions on the work you will have done so far for assignment 2. One of the purposes of this "presentation" is to identify students who have cheated or intend to cheat 
\b without properly understanding the concepts!
\b0  \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls4\ilvl0
\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Do not forget to check out the code examples.
\b0  \
\pard\pardeftab720\sl200\sa240\partightenfactor0

\fs18 \cf2 \super 1
\fs20 \nosupersub UDP works here too but TCP is preferred since the consequences of missing or corrupt RTSP packets are more severe than of corrupt or missing RTP packets.
\fs24 \
}